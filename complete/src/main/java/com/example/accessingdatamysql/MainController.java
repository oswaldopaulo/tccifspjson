package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

//@Controller	// This means that this class is a Controller
@RestController
@RequestMapping(path="/v1") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	
	@Autowired
	private EmpresasRepository empresasRepository;
	
	@Autowired
	private LojaRepository lojaRepository;
	
	@Autowired
	private Produtos_imagensRepository produtos_imagensRepository;



	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@CrossOrigin
	@GetMapping(path="/empresa") // Map ONLY POST Requests
	public @ResponseBody  Iterable<Empresas>getEmpresa(@RequestParam String token) {
	
		return empresasRepository.findByToken(token);
	}
	
	@CrossOrigin
	@GetMapping(path="/loja") // Map ONLY POST Requests
	public @ResponseBody  Iterable<Loja> getAllLoja(@RequestParam(required = false) String token,@RequestParam(required = false)Integer idloja) {
		
		
		if(token==null) return null;
		
		Empresas emp2 = new Empresas();
		 Iterable<Empresas> emp = empresasRepository.findByToken(token);
		 
		 if(emp==null) return null;
		 
		 for(Empresas s: emp){
				emp2 = s;
			}
	
		 if(idloja!=null) {
			 return lojaRepository.findByidloja(idloja);
		 }
		
		return lojaRepository.findByidempresa(emp2.getId());
	}
	
	
	@CrossOrigin
	@GetMapping(path="/pics") // Map ONLY POST Requests
	public @ResponseBody  Iterable<Produtos_imagens> getImagens(@RequestParam(required = false)Integer produto) {
		
		
		if(produto==null) return null;
		return produtos_imagensRepository.findByProduto(produto);
	}
	
	
	
	
	
}
